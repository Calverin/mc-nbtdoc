compound Axolotl extends super::Breedable {
	/// The axolotl's brain
	Brain: Brain,
	/// The variant of the axolotl
	Variant: Variant,
	/// If this axolotl was released from a bucket
	FromBucket: boolean
}

enum(int) Variant {
	Lucy = 0,
	Wild = 1,
	Gold = 2,
	Cyan = 3,
	Blue = 4
}

compound Brain {
	/// The axolotl's memories
	memories: Memories
}

compound Memories {
	/// Whether the axolotl has a hunting cooldown
	"minecraft:has_hunting_cooldown": CooldownMemory,
	/// Whether the axolotl is tempted by the player
	"minecraft:is_tempted": BooleanMemory,
	/// The number of ticks until the axolotl stops playing dead
	"minecraft:play_dead_ticks": TickMemory,
	/// The number of ticks until the axolotl can be tempted again
	"minecraft:temptation_cooldown_ticks": TickMemory
}

compound CooldownMemory {
	value: boolean,
	/// The number of ticks until this memory is removed
	ttl: long
}

compound BooleanMemory {
	value: boolean
}

compound TickMemory {
	value: int
}

Axolotl describes minecraft:entity[minecraft:axolotl];
